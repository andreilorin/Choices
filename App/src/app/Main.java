/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Lorin
 */
public class Main extends javax.swing.JFrame {
    
    private static final String[] 
            RANK = {"2", "3", "4", "5", "6", "7", 
                "8", "9", "10", "J", "Q", "K", "A"},
            SUIT = {"club", "diamond", "heart", "spade"};     

    /**
     * Creates new form NewJFrame
     */
    public Main() {
        
//ArrayList for players hand
        ArrayList<Card> player1 = new ArrayList<>();
        ArrayList<Card> player2 = new ArrayList<>();
        ArrayList<Card> player3 = new ArrayList<>();
        
        //ArrayList for faceCard
        ArrayList<Card> faceCard = new ArrayList<>();
        
        //ArrayList for deck
        ArrayList<Card> deck = new ArrayList<>();
        
        //place to load all the images
        ArrayList<ImageIcon> allImages = new ArrayList<>();
        
        //add images to ArrayList
        for(int i=0; i<52; i++){
            
            String name = "C:\\Users\\Lorin\\Documents\\NetBeansProjects\\Choices\\App\\src\\app\\images\\" + i + ".png";
                       
            try{
                ImageIcon bigImage = new ImageIcon(name);                
                allImages.add(bigImage);
            }catch(Exception e){
                System.out.println(e);
            }           
        }        
        //ArrayList of players AL
        ArrayList<ArrayList<app.Card>> allPlayers = new ArrayList<>();
        
        //add players to allPlayers ArrayList
        allPlayers.add(player1);
        allPlayers.add(player2);
        allPlayers.add(player3);
        
        //create dealer
        Dealer dealer = new Dealer();
        
        //create the cards with images
        ArrayList<app.Card> allTheCards = dealer.createAllTheCards(RANK, SUIT, allImages);//   
        
        //deal the cards 
        dealer.deal(allTheCards, faceCard, allPlayers, deck);  
        
        
        initComponents();
        
        JButton button = new JButton();
        button.setSize(110, 160);
        button.setLocation(300, 300);
        button.setIcon(faceCard.get(0).getCardIcon());        
        
        
        
        //TODO method for moving cards----------------------------------------------------------------------------
        button.addMouseListener(new MouseListener() {
            
            int card = 0;
            
            @Override
            public void mouseClicked(MouseEvent e) {
                System.out.println(card);
                faceCard.add(allTheCards.get(0));                  // TODO
                button.setIcon(player1.get(card).getCardIcon());
                System.out.println(button.getIcon().toString());
                card++;// TODO
            }

            @Override
            public void mousePressed(MouseEvent e) {                
            }

            @Override
            public void mouseReleased(MouseEvent e) {                
            }

            @Override
            public void mouseEntered(MouseEvent e) {                
            }

            @Override
            public void mouseExited(MouseEvent e) {                
            }
        });
        
        
        
        JLabel label = new JLabel();
        label.setSize(110, 160);
        label.setIcon(player1.get(0).getCardIcon());
        
        
        
        this.add(label);
        this.add(button);
        this.setLocation(300, 300);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Choices");
        setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
